#include "monitor.h"
#include <avr/interrupt.h>

#define MAX_NB 4294967295
#define MAX_CNT 255
#define PERIOD ??
#define PI 3.14

long nb_tim_isr;
double avg_speed; // tours / sec
unsigned long nb_samples;

ISR (TIMER1_OVF_vect){  
  nb_tim_isr++;
}

// to change
void ISR (void){
  // en secondes
  double time_passed = nb_tim_isr * PERIOD + (TCNT/(double)MAX_TCNT) * PERIOD;
  // en tours par seconde
  double freq = 1/time_passed;		         
  avg_speed = avg_speed * nb_samples / (nb_samples + 1);
  nb_tim_isr = 0;
  TCNT0 = 0;
  if (nb_samples == MAX_NB){
    // disables isr, keep avg
  }
}

void init_monitor(){
  nb_tim_isr = 0;
  avg_speed = 0;
  nb_samples = 0;
  TCCR0A = 0x00;
  TCNT0 = 0;   // for 1 sec at 13 MHz
  TCCR0B = (1 << CS??) | (1 << CS??);  // Timer mode with 1024 prescler
  TIMSK = (1 << TOIE0) ;   // Enable timer1 overflow interrupt(TOIE0)
}

// radians
double get_current_angle(){
  double one_tour_time = 1/avg_speed;
  double time_passed = nb_tim_isr * PERIOD + (TCNT/(double)MAX_TCNT) * PERIOD;
  return time_passed/one_tour_time * 2 * PI;
}
